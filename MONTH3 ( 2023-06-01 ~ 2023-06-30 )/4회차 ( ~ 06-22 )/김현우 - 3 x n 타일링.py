def solution(n):

    dp = [0 for _ in range(n + 1)]
    # n = 0일 때는 편의상 1가지 경우의 수로 생각
    dp[0] = 1
    dp[2] = 3

    # n이 홀수일 때는 불가능, n이 짝수일 때만 갱신
    for i in range(4, n + 1, 2):
        # 1. dp[i-2]번째 경우의 수 * 3 -> 마지막 블럭들이 4칸 이상 가로로 이어져있지 않을 경우
        # 2. 그 이전 모든 경우의 수 * 2 -> 마지막 블럭들이 4칸 이상 가로로 이어져 있는 경우
        dp[i] = (3 * dp[i - 2] + 2 * sum(dp[:i - 3])) % 1000000007

    return dp[n]